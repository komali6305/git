GIT CLONE: it download code from github(Remote) to git(Local).
git clone https://github.com/anitalluri00/paytm.git


GIT FORK: it download code from github account to another.
For git clone and git fork repos must be public.

NOTE: IF WE WANT TO CLONE/FORK FOR PUBLIC REPO WE CAN DO IT DIRECTLY.
FOR PRIVTE REPOSE PREMISSION IS MUST.

PUBLIC REPO: source code will be visible from internet.
PRIVATE REPO: source code will be hidden from internet.

BRANCH PROTECTION RULES:TO RESTRICT THE USER TO NOT DELETE THE BRANCH
SETTINGS -- > BRANCH -- > ADD BRANCH RULE SET -- > Enforcement status: Active
Target branches --  add target -- > include all brances --> Create

MERGE CONFLICTS:
it will rise when we merge 2 different branches with same files.
How to resolve: Manually


GIT PULL:
used to get the changed files from github to git.
git pull origin master

GIT FETCH:
used to show the changed files from github to git.
git fetch

CHERRY-PICK: Merging the specific files based on commits.
git cherry-pick commit_id

Process:

mkdir raham
cd raham/
touch java{1..3}
git init
git add java*
git commit -m "java-commits" java*
git branch
git checkout -b branch1
touch python{1..5}
git add python*
git commit -m "python commits" python*
touch php{1..5}
git add php*
git commit -m "php commits" php*
touch donet{1..5}
git add donet*
git commit -m "dontent commits" donet*
git log --oneline
git checkout master
ll
git cherry-pick commit_id_of python
ll
git cherry-pick commit_id_of php


.gitignore: this file will ignore the files of being tracked.
if you write any filename on this .gitingore it wont track that file.
USECASE: cred, statefile

Note: . should be mandatory

GIT STATSH: use to hide the files temporarily.
Note: files need to tracked but not committed.

touch file{1..3}
git add file*
git stash       -- > files will be hidden
git stash apply -- > to bring the files back
git stash list  -- > to list stashes
git stash clear -- > to delete all stashes

